{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Component, ViewChild, NgModule } from '@angular/core';\nimport { MatInput, MatInputModule } from '@angular/material/input';\nimport { FieldType, FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/input';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@ngx-formly/core';\n\nfunction FormlyFieldInput_input_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 2);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id)(\"type\", ctx_r0.type || \"text\")(\"readonly\", ctx_r0.to.readonly)(\"required\", ctx_r0.to.required)(\"errorStateMatcher\", ctx_r0.errorStateMatcher)(\"formControl\", ctx_r0.formControl)(\"formlyAttributes\", ctx_r0.field)(\"tabindex\", ctx_r0.to.tabindex)(\"placeholder\", ctx_r0.to.placeholder);\n  }\n}\n\nfunction FormlyFieldInput_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"input\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r2.id)(\"readonly\", ctx_r2.to.readonly)(\"required\", ctx_r2.to.required)(\"errorStateMatcher\", ctx_r2.errorStateMatcher)(\"formControl\", ctx_r2.formControl)(\"formlyAttributes\", ctx_r2.field)(\"tabIndex\", ctx_r2.to.tabindex)(\"placeholder\", ctx_r2.to.placeholder);\n  }\n}\n\nlet FormlyFieldInput = /*#__PURE__*/(() => {\n  class FormlyFieldInput extends FieldType {\n    /**\n     * @return {?}\n     */\n    get type() {\n      return this.to.type || 'text';\n    }\n\n  }\n\n  FormlyFieldInput.ɵfac = /*@__PURE__*/function () {\n    let ɵFormlyFieldInput_BaseFactory;\n    return function FormlyFieldInput_Factory(t) {\n      return (ɵFormlyFieldInput_BaseFactory || (ɵFormlyFieldInput_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FormlyFieldInput)))(t || FormlyFieldInput);\n    };\n  }();\n\n  FormlyFieldInput.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FormlyFieldInput,\n    selectors: [[\"formly-field-mat-input\"]],\n    viewQuery: function FormlyFieldInput_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInput, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.formFieldControl = _t.first);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[\"matInput\", \"\", 3, \"id\", \"type\", \"readonly\", \"required\", \"errorStateMatcher\", \"formControl\", \"formlyAttributes\", \"tabindex\", \"placeholder\", 4, \"ngIf\", \"ngIfElse\"], [\"numberTmp\", \"\"], [\"matInput\", \"\", 3, \"id\", \"type\", \"readonly\", \"required\", \"errorStateMatcher\", \"formControl\", \"formlyAttributes\", \"tabindex\", \"placeholder\"], [\"matInput\", \"\", \"type\", \"number\", 3, \"id\", \"readonly\", \"required\", \"errorStateMatcher\", \"formControl\", \"formlyAttributes\", \"tabIndex\", \"placeholder\"]],\n    template: function FormlyFieldInput_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, FormlyFieldInput_input_0_Template, 1, 9, \"input\", 0);\n        ɵngcc0.ɵɵtemplate(1, FormlyFieldInput_ng_template_1_Template, 1, 8, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(2);\n\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.type !== \"number\")(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc2.MatInput, ɵngcc3.DefaultValueAccessor, ɵngcc3.RequiredValidator, ɵngcc3.NgControlStatus, ɵngcc3.FormControlDirective, ɵngcc4.FormlyAttributes, ɵngcc3.NumberValueAccessor],\n    encapsulation: 2\n  });\n  return FormlyFieldInput;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet FormlyMatInputModule = /*#__PURE__*/(() => {\n  class FormlyMatInputModule {}\n\n  FormlyMatInputModule.ɵfac = function FormlyMatInputModule_Factory(t) {\n    return new (t || FormlyMatInputModule)();\n  };\n\n  FormlyMatInputModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FormlyMatInputModule\n  });\n  FormlyMatInputModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ReactiveFormsModule, MatInputModule, FormlyMatFormFieldModule, FormlyModule.forChild({\n      types: [{\n        name: 'input',\n        component: FormlyFieldInput,\n        wrappers: ['form-field']\n      }]\n    })]]\n  });\n  return FormlyMatInputModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormlyMatInputModule, {\n    declarations: function () {\n      return [FormlyFieldInput];\n    },\n    imports: function () {\n      return [CommonModule, ReactiveFormsModule, MatInputModule, FormlyMatFormFieldModule, ɵngcc4.FormlyModule];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { FormlyMatInputModule, FormlyFieldInput }; //# sourceMappingURL=ngx-formly-material-input.js.map","map":null,"metadata":{},"sourceType":"module"}