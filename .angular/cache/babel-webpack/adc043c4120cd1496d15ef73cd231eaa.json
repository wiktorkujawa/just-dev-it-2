{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { select } from '@ngrx/store';\nimport { selectMessage } from 'src/app/auth/store/selectors/user.selectors';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@ngx-formly/core\";\nimport * as i6 from \"@angular/common\";\n\nfunction AuthComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const msg_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", msg_r1.message, \" \");\n  }\n}\n\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    constructor(store, dialog, data) {\n      this.store = store;\n      this.dialog = dialog;\n      this.data = data;\n      this.RegisterOrLogin = new EventEmitter();\n      this.form = new FormGroup({});\n      this.exampleData = {\n        email: '',\n        displayName: '',\n        password: '',\n        password2: ''\n      };\n      this.environment = environment.apiUrl;\n      this.firstFormFields = [{\n        key: 'email',\n        type: 'input',\n        templateOptions: {\n          label: 'Email address',\n          placeholder: 'Enter email',\n          required: true,\n          appearance: 'outline'\n        }\n      }, {\n        key: 'password',\n        type: 'input',\n        templateOptions: {\n          type: 'password',\n          label: 'password',\n          placeholder: 'Enter password',\n          required: true,\n          appearance: 'outline'\n        }\n      }];\n      this.secondFormFields = [{\n        key: 'email',\n        type: 'input',\n        templateOptions: {\n          type: 'email',\n          label: 'Email address',\n          placeholder: 'Enter email',\n          required: true,\n          appearance: 'outline'\n        },\n        validators: {\n          email: {\n            expression: c => !c.value || /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(c.value),\n            message: (_error, field) => `\"${field.formControl.value}\" is not a valid email Address`\n          }\n        }\n      }, {\n        key: 'displayName',\n        type: 'input',\n        templateOptions: {\n          label: 'Name',\n          placeholder: 'Enter name',\n          required: true,\n          appearance: 'outline'\n        }\n      }, {\n        key: 'password',\n        type: 'input',\n        templateOptions: {\n          type: 'password',\n          label: 'password',\n          placeholder: 'Enter password',\n          required: true,\n          appearance: 'outline'\n        }\n      }, {\n        key: 'password2',\n        type: 'input',\n        templateOptions: {\n          type: 'password',\n          label: 'Confirm password',\n          placeholder: 'Confirm password',\n          required: true,\n          appearance: 'outline'\n        }\n      }];\n    }\n\n    ngOnInit() {\n      this.switched = this.data.switched;\n    }\n\n    onSubmit() {\n      this.RegisterOrLogin.emit({\n        switched: this.switched,\n        data: {\n          email: this.exampleData.email,\n          displayName: this.exampleData.displayName,\n          password: this.exampleData.password,\n          password2: this.exampleData.password2\n        }\n      });\n      this.message$ = this.store.pipe(select(selectMessage));\n    }\n\n    onNoClick() {\n      this.dialog.closeAll();\n    }\n\n    switchForms() {\n      this.switched = !this.switched;\n    }\n\n  }\n\n  AuthComponent.ɵfac = function AuthComponent_Factory(t) {\n    return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n\n  AuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthComponent,\n    selectors: [[\"app-form\"]],\n    outputs: {\n      RegisterOrLogin: \"RegisterOrLogin\"\n    },\n    decls: 19,\n    vars: 10,\n    consts: [[1, \"form\"], [\"mat-button\", \"\", 1, \"close\", 3, \"click\"], [\"mat-dialog-title\", \"\"], [\"mat-raised-button\", \"\", 1, \"social-auth\", 3, \"href\"], [1, \"fab\", \"fa-google\", \"mb-1\"], [3, \"formGroup\", \"ngSubmit\"], [3, \"form\", \"fields\", \"model\"], [1, \"switch\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", \"color\", \"primary\", 1, \"btn\", \"btn-primary\", \"float-right\", 3, \"disabled\"], [\"class\", \"message\", 4, \"ngFor\", \"ngForOf\"], [\"mat-button\", \"\", 3, \"click\"], [1, \"message\"]],\n    template: function AuthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-dialog-content\", 0);\n        i0.ɵɵelementStart(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_1_listener() {\n          return ctx.onNoClick();\n        });\n        i0.ɵɵtext(2, \"X\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"h2\", 2);\n        i0.ɵɵtext(4, \"Fill the form!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"hr\");\n        i0.ɵɵelementStart(6, \"a\", 3);\n        i0.ɵɵelement(7, \"i\", 4);\n        i0.ɵɵtext(8, \" Login with Google \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelement(10, \"formly-form\", 6);\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵtext(13, \"Submit \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\");\n        i0.ɵɵtemplate(15, AuthComponent_div_15_Template, 2, 1, \"div\", 9);\n        i0.ɵɵpipe(16, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"a\", 10);\n        i0.ɵɵlistener(\"click\", function AuthComponent_Template_a_click_17_listener() {\n          return ctx.switchForms();\n        });\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"href\", ctx.environment + \"/auth/google\", i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"form\", ctx.form)(\"fields\", ctx.switched ? ctx.firstFormFields : ctx.secondFormFields)(\"model\", ctx.exampleData);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.form.valid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(16, 8, ctx.message$));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.switched ? \"Not registered?\" : \"Back to login\");\n      }\n    },\n    directives: [i2.MatDialogContent, i3.MatButton, i2.MatDialogTitle, i3.MatAnchor, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i5.FormlyForm, i6.NgForOf],\n    pipes: [i6.AsyncPipe],\n    styles: [\".switch{text-decoration:none;display:flex;justify-content:space-between}.switch a{text-decoration:none}.switch a:hover{color:#ff4136}.social-auth{text-decoration:none;display:flex;justify-content:space-evenly;margin-bottom:2rem}.social-auth:hover{color:#ff4136}.social-auth i{padding:0 .5rem}.message{text-align:center;color:#ff4136}.close{position:absolute;right:0;margin-right:2rem}.form{position:relative}.mat-form-field{width:190px}\\n\"],\n    encapsulation: 2\n  });\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}