{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Component, ViewChild, NgModule } from '@angular/core';\nimport { MatInput, MAT_INPUT_VALUE_ACCESSOR, MatInputModule } from '@angular/material/input';\nimport { FieldType, FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/input';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/cdk/text-field';\nimport * as ɵngcc4 from '@ngx-formly/core';\nlet FormlyFieldTextArea = /*#__PURE__*/(() => {\n  class FormlyFieldTextArea extends FieldType {\n    constructor() {\n      super(...arguments);\n      this.defaultOptions = {\n        templateOptions: {\n          cols: 1,\n          rows: 1\n        }\n      };\n    }\n\n  }\n\n  FormlyFieldTextArea.ɵfac = /*@__PURE__*/function () {\n    let ɵFormlyFieldTextArea_BaseFactory;\n    return function FormlyFieldTextArea_Factory(t) {\n      return (ɵFormlyFieldTextArea_BaseFactory || (ɵFormlyFieldTextArea_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FormlyFieldTextArea)))(t || FormlyFieldTextArea);\n    };\n  }();\n\n  FormlyFieldTextArea.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FormlyFieldTextArea,\n    selectors: [[\"formly-field-mat-textarea\"]],\n    viewQuery: function FormlyFieldTextArea_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInput, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.formFieldControl = _t.first);\n      }\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([// fix for https://github.com/ngx-formly/ngx-formly/issues/1688\n    // rely on formControl value instead of elementRef which return empty value in Firefox.\n    {\n      provide: MAT_INPUT_VALUE_ACCESSOR,\n      useExisting: FormlyFieldTextArea\n    }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 2,\n    vars: 15,\n    consts: [[\"matInput\", \"\", 3, \"id\", \"readonly\", \"required\", \"formControl\", \"errorStateMatcher\", \"cols\", \"rows\", \"formlyAttributes\", \"placeholder\", \"tabindex\", \"cdkTextareaAutosize\", \"cdkAutosizeMinRows\", \"cdkAutosizeMaxRows\"]],\n    template: function FormlyFieldTextArea_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"textarea\", 0);\n        ɵngcc0.ɵɵtext(1, \"    \");\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-textarea-autosize\", ctx.to.autosize);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.id)(\"readonly\", ctx.to.readonly)(\"required\", ctx.to.required)(\"formControl\", ctx.formControl)(\"errorStateMatcher\", ctx.errorStateMatcher)(\"cols\", ctx.to.cols)(\"rows\", ctx.to.rows)(\"formlyAttributes\", ctx.field)(\"placeholder\", ctx.to.placeholder)(\"tabindex\", ctx.to.tabindex)(\"cdkTextareaAutosize\", ctx.to.autosize)(\"cdkAutosizeMinRows\", ctx.to.autosizeMinRows)(\"cdkAutosizeMaxRows\", ctx.to.autosizeMaxRows);\n      }\n    },\n    directives: [ɵngcc1.MatInput, ɵngcc2.DefaultValueAccessor, ɵngcc3.CdkTextareaAutosize, ɵngcc2.RequiredValidator, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective, ɵngcc4.FormlyAttributes],\n    encapsulation: 2\n  });\n  return FormlyFieldTextArea;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet FormlyMatTextAreaModule = /*#__PURE__*/(() => {\n  class FormlyMatTextAreaModule {}\n\n  FormlyMatTextAreaModule.ɵfac = function FormlyMatTextAreaModule_Factory(t) {\n    return new (t || FormlyMatTextAreaModule)();\n  };\n\n  FormlyMatTextAreaModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FormlyMatTextAreaModule\n  });\n  FormlyMatTextAreaModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ReactiveFormsModule, MatInputModule, FormlyMatFormFieldModule, FormlyModule.forChild({\n      types: [{\n        name: 'textarea',\n        component: FormlyFieldTextArea,\n        wrappers: ['form-field']\n      }]\n    })]]\n  });\n  return FormlyMatTextAreaModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormlyMatTextAreaModule, {\n    declarations: function () {\n      return [FormlyFieldTextArea];\n    },\n    imports: function () {\n      return [CommonModule, ReactiveFormsModule, MatInputModule, FormlyMatFormFieldModule, ɵngcc4.FormlyModule];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { FormlyMatTextAreaModule, FormlyFieldTextArea }; //# sourceMappingURL=ngx-formly-material-textarea.js.map","map":null,"metadata":{},"sourceType":"module"}