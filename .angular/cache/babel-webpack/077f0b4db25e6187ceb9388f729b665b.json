{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Component, ViewChild, Renderer2, NgModule } from '@angular/core';\nimport { FieldType, FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatCheckbox, MatCheckboxModule } from '@angular/material/checkbox';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/checkbox';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@ngx-formly/core';\nimport * as ɵngcc5 from '@angular/common';\n\nfunction FormlyFieldCheckbox_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 2);\n    ɵngcc0.ɵɵtext(1, \"*\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nlet FormlyFieldCheckbox = /*#__PURE__*/(() => {\n  class FormlyFieldCheckbox extends FieldType {\n    /**\n     * @param {?} renderer\n     * @param {?} focusMonitor\n     */\n    constructor(renderer, focusMonitor) {\n      super();\n      this.renderer = renderer;\n      this.focusMonitor = focusMonitor;\n      this.defaultOptions = {\n        templateOptions: {\n          hideFieldUnderline: true,\n          indeterminate: true,\n          floatLabel: 'always',\n          hideLabel: true,\n          align: 'start',\n          // start or end\n          color: 'accent'\n        }\n      };\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n\n\n    onContainerClick(event) {\n      this.checkbox.focus();\n      super.onContainerClick(event);\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngAfterViewInit() {\n      if (this.checkbox) {\n        this.focusMonitor.monitor(this.checkbox._inputElement, true).subscribe(\n        /**\n        * @param {?} focusOrigin\n        * @return {?}\n        */\n        focusOrigin => {\n          if (focusOrigin) {\n            this.to.focus && this.to.focus(this.field);\n          } else {\n            this.to.blur && this.to.blur(this.field);\n          }\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngAfterViewChecked() {\n      if (this.required !== this._required && this.checkbox && this.checkbox._inputElement) {\n        this._required = this.required;\n        /** @type {?} */\n\n        const inputElement = this.checkbox._inputElement.nativeElement;\n\n        if (this.required) {\n          this.renderer.setAttribute(inputElement, 'required', 'required');\n        } else {\n          this.renderer.removeAttribute(inputElement, 'required');\n        }\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnDestroy() {\n      if (this.checkbox) {\n        this.focusMonitor.stopMonitoring(this.checkbox._inputElement);\n      }\n    }\n\n  }\n\n  FormlyFieldCheckbox.ɵfac = function FormlyFieldCheckbox_Factory(t) {\n    return new (t || FormlyFieldCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor));\n  };\n\n  FormlyFieldCheckbox.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FormlyFieldCheckbox,\n    selectors: [[\"formly-field-mat-checkbox\"]],\n    viewQuery: function FormlyFieldCheckbox_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatCheckbox, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.checkbox = _t.first);\n      }\n    },\n    features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n    decls: 3,\n    vars: 9,\n    consts: [[3, \"formControl\", \"id\", \"formlyAttributes\", \"tabIndex\", \"indeterminate\", \"color\", \"labelPosition\"], [\"aria-hidden\", \"true\", \"class\", \"mat-form-field-required-marker\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-form-field-required-marker\"]],\n    template: function FormlyFieldCheckbox_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-checkbox\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵtemplate(2, FormlyFieldCheckbox_span_2_Template, 2, 0, \"span\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"formControl\", ctx.formControl)(\"id\", ctx.id)(\"formlyAttributes\", ctx.field)(\"tabIndex\", ctx.to.tabindex)(\"indeterminate\", ctx.to.indeterminate && ctx.formControl.value === null)(\"color\", ctx.to.color)(\"labelPosition\", ctx.to.align || ctx.to.labelPosition);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.to.label, \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.to.required && ctx.to.hideRequiredMarker !== true);\n      }\n    },\n    directives: [ɵngcc2.MatCheckbox, ɵngcc3.NgControlStatus, ɵngcc3.FormControlDirective, ɵngcc4.FormlyAttributes, ɵngcc5.NgIf],\n    encapsulation: 2\n  });\n  /** @nocollapse */\n\n  return FormlyFieldCheckbox;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet FormlyMatCheckboxModule = /*#__PURE__*/(() => {\n  class FormlyMatCheckboxModule {}\n\n  FormlyMatCheckboxModule.ɵfac = function FormlyMatCheckboxModule_Factory(t) {\n    return new (t || FormlyMatCheckboxModule)();\n  };\n\n  FormlyMatCheckboxModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FormlyMatCheckboxModule\n  });\n  FormlyMatCheckboxModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, ReactiveFormsModule, MatCheckboxModule, FormlyMatFormFieldModule, FormlyModule.forChild({\n      types: [{\n        name: 'checkbox',\n        component: FormlyFieldCheckbox,\n        wrappers: ['form-field']\n      }]\n    })]]\n  });\n  return FormlyMatCheckboxModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FormlyMatCheckboxModule, {\n    declarations: function () {\n      return [FormlyFieldCheckbox];\n    },\n    imports: function () {\n      return [CommonModule, ReactiveFormsModule, MatCheckboxModule, FormlyMatFormFieldModule, ɵngcc4.FormlyModule];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { FormlyMatCheckboxModule, FormlyFieldCheckbox }; //# sourceMappingURL=ngx-formly-material-checkbox.js.map","map":null,"metadata":{},"sourceType":"module"}